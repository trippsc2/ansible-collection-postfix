---
- name: Gather OS facts
  when:
    - ansible_distribution is not defined or
      ansible_distribution_major_version is not defined or
      ansible_distribution_release is not defined or
      ansible_distribution_version is not defined or
      ansible_os_family is not defined
  ansible.builtin.setup:
    gather_subset:
      - '!all'
      - '!min'
      - distribution
      - distribution_major_version
      - distribution_release
      - distribution_version
      - os_family

- name: Include OS specific variables
  ansible.builtin.include_vars: "{{ _file }}"
  vars:
    _file: "{{ lookup('first_found', _params) }}"
    _params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml"
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
        - fallback.yml
      paths:
        - "{{ role_path }}/vars"

- name: Validate OS is not Windows
  ansible.builtin.assert:
    that:
      - ansible_os_family != 'Windows'
    fail_msg: This role does not support being run against Windows systems.
    success_msg: This role is not being run against a Windows system.

- name: Display Operating System name
  when:
    - _postfix_os_tested
  ansible.builtin.debug:
    msg: "This role has been tested against {{ ansible_distribution }} {{ ansible_distribution_version }} or equivalent systems."

- name: Warn on untested Operating System
  when:
    - not _postfix_os_tested
  ansible.builtin.debug:
    msg: "WARNING: This role has not been tested against {{ ansible_distribution }} {{ ansible_distribution_version }} or equivalent systems."
